Claro! Vou explicar o código por partes, para que você possa entender cada um dos elementos que o compõem.

Estrutura Básica
html
Copiar código
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Efeitos de luzes seguindo o mouse</title>
    <style>
        <!-- CSS vai aqui -->
    </style>
</head>
<body>
    <!-- HTML e JavaScript vão aqui -->
</body>
</html>
Aqui você tem a estrutura básica de uma página HTML:

A linha <!DOCTYPE html> diz ao navegador que estamos usando HTML5.
A tag <html> define o início do documento HTML.
No <head>, temos a definição do charset (que define como os caracteres são codificados), a viewport para otimizar a visualização em diferentes dispositivos, e o <title> que aparece na aba do navegador.
O conteúdo visível da página e os scripts JavaScript são colocados dentro das tags <body>.
CSS: Estilizando o efeito de luz
Estilos do corpo da página
css
Copiar código
body {
    background-color: black;
}
Isso simplesmente define o fundo da página como preto para destacar melhor as luzes coloridas que serão desenhadas.

Estilos das luzes
css
Copiar código
.luz {
    width: 20px;
    height: 20px;
    border-radius: 50%;
    position: absolute;
    transition: 0.5s;
    transform: translate(-10px, -10px);
}
Aqui, .luz é uma classe CSS para os elementos que representam as luzes. Vamos entender suas propriedades:

width e height: As luzes terão 20px de largura e altura, formando um quadrado.
border-radius: 50%: Isso transforma o quadrado em um círculo, dando a aparência de uma "luz".
position: absolute: Isso permite que as luzes se movam livremente pela tela.
transition: 0.5s: Define uma transição suave, permitindo que os elementos se movam gradualmente em vez de instantaneamente.
transform: translate(-10px, -10px): Isso ajusta a posição para que as luzes se movam com base no centro do cursor do mouse.
Cores das luzes
css
Copiar código
.luz-vermelha {
    background-color: rgb(255, 0, 0);
}
.luz-azul {
    background-color: rgb(0, 0, 255);
}
.luz-verde {
    background-color: rgb(0, 128, 0);
}
.luz-amarela {
    background-color: rgb(240, 224, 3);
}
Cada uma dessas classes define a cor das luzes. Usando background-color, você pode alterar a cor de cada luz:

.luz-vermelha: Vermelha.
.luz-azul: Azul.
.luz-verde: Verde.
.luz-amarela: Amarela.
Estilos de rastro
css
Copiar código
.luz-rastro {
    opacity: 1;
    width: 40px;
    height: 15px;
    border-radius: 50%;
    position: absolute;
    transition: 0.5s;
    transform: translate(-10px, -10px);
    transition: opacity 0.5s;
}
A classe .luz-rastro define o estilo para os rastros deixados pelas luzes:

opacity: 1: Define a opacidade inicial, que pode ser alterada dinamicamente.
width: 40px e height: 15px: O rastro é um pouco maior que a luz.
border-radius: 50%: Isso também cria um efeito arredondado.
position: absolute e transform: Permitem a movimentação e ajuste de posição do rastro.
transition: opacity 0.5s: Define uma transição suave para a opacidade do rastro, fazendo-o desaparecer gradualmente.
Sombras e blur (efeito de lanterna)
css
Copiar código
.luz-vermelha.lanterna {
  box-shadow: 0 0 10px rgba(255, 0, 0, 0.5);
  filter: blur(2px);
}
Para cada cor, a classe .lanterna aplica um efeito de "lanterna":

box-shadow: Cria uma sombra em volta da luz, dando a sensação de uma luz difusa.
filter: blur(2px): Aplica um efeito de desfoque, aumentando a impressão de uma fonte de luz.
JavaScript: Controlando o movimento e o rastro das luzes
Agora, vamos ao script JavaScript, que faz o efeito de luz seguir o mouse:

javascript
Copiar código
const luzes = document.querySelectorAll('.luz');
const rastros = [];
Aqui, ele seleciona todos os elementos com a classe .luz (as quatro luzes coloridas) e cria um array rastros para armazenar os rastros.

Evento de movimento do mouse
javascript
Copiar código
document.addEventListener('mousemove', (event) => {
  luzes.forEach((luz, index) => {
    luz.style.left = event.clientX + (index * 10) + 'px';
    luz.style.top = event.clientY + (index * 10) + 'px';
Neste trecho, para cada movimento do mouse (mousemove), ele ajusta a posição das luzes:

event.clientX e event.clientY capturam as coordenadas do cursor do mouse.
luz.style.left e luz.style.top ajustam a posição de cada luz.
O valor index * 10 dá um leve espaçamento entre as luzes, de modo que não se sobreponham completamente.
Cálculo de distância e opacidade do rastro
javascript
Copiar código
    const distance = Math.sqrt(Math.pow(event.clientX - luz.offsetLeft, 2) + Math.pow(event.clientY - luz.offsetTop, 2));
    const opacity = 1 - (distance / 100);
Aqui ele calcula a distância entre o mouse e a luz (luz.offsetLeft e luz.offsetTop) e ajusta a opacidade do rastro:

Quanto mais distante o rastro está do mouse, mais opaco ele se torna.
Criando e exibindo o rastro
javascript
Copiar código
    const newRastro = document.createElement('div');
    newRastro.className = `luz-rastro ${luz.className} lanterna`;
    newRastro.style.left = luz.style.left;
    newRastro.style.top = luz.style.top;
    newRastro.style.opacity = opacity;
    rastros.push(newRastro);
    document.body.appendChild(newRastro);
Cada vez que o mouse se move, um novo div é criado para o rastro (newRastro), com as mesmas propriedades de posição e cor da luz correspondente.

O rastro é adicionado ao array rastros e também ao document.body.

Limitação do número de rastros
javascript
Copiar código
    if (rastros.length > 10) {
      rastros[0].remove();
      rastros.shift();
    }
Para evitar uma quantidade infinita de rastros na tela, o código limita o número de rastros a 10. Quando esse limite é excedido, o rastro mais antigo é removido.

Conclusão
O código combina HTML, CSS e JavaScript para criar um efeito de luzes que seguem o cursor do mouse. O JavaScript lida com o movimento e a criação dos rastros, enquanto o CSS estiliza as luzes e seus efeitos. Você pode personalizar várias partes, como cores, tamanho, e duração do rastro, para criar diferentes variações do efeito.

Se tiver mais dúvidas ou quiser ajustar algo, estou à disposição!

************Resumo do efeito
O código cria um "rastro de luz" que segue o mouse.
Ele utiliza vários elementos com a classe luz para definir múltiplos rastros.
A posição dos rastros segue o mouse, com um pequeno atraso e deslocamento para criar uma sensação de suavidade.
Os rastros desaparecem gradualmente para não sobrecarregar a tela com elementos antigos.